using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace ALMSystem2.Controllers
{
    public class AdminController : Controller
    {
        // GET: Admin/Login
        public ActionResult AdminLogin()
        {
            return View();
        }

        // POST: Admin/Login
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult AdminLogin(string username, string password)
        {
            if (username == "admin" && password == "password") // Example validation
            {
                return RedirectToAction("AdminDashboard");
            }

            ModelState.AddModelError("", "Invalid login attempt.");
            return View();
        }

        // GET: Admin/Dashboard
        public ActionResult AdminDashboard()
        {
            return View();
        }

        // GET: Admin/ProjectDetails
        public ActionResult ProjectDetails()
        {
            var projects = new List<object>
            {
                new { ProjectID = 1, ProjectName = "Project Alpha", StartDate = DateTime.Now.AddMonths(-6), EndDate = DateTime.Now.AddMonths(6), Status = "Active" }
                // Add more projects as necessary
            };
            return View(projects);
        }

        // GET: Admin/CreateNewProject
        public ActionResult CreateNewProject()
        {
            return View();
        }

        // POST: Admin/CreateNewProject
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult CreateNewProject(FormCollection form)
        {
            // Extract form values
            string projectName = form["ProjectName"];
            DateTime startDate = Convert.ToDateTime(form["StartDate"]);
            DateTime endDate = Convert.ToDateTime(form["EndDate"]);
            string status = form["Status"];

            // Add the new project to the database (replace with actual data insertion logic)
            // Example:
            // db.AddProject(projectName, startDate, endDate, status);

            // After adding the new project, redirect to ProjectDetails
            return RedirectToAction("ProjectDetails");
        }

        // GET: Admin/EditProject/1
        public ActionResult EditProject(int id)
        {
            // Ideally, fetch the project from the database using the id
            // Example (replace with actual data retrieval logic):
            var project = new
            {
                ProjectID = id,
                ProjectName = "Project Alpha",
                StartDate = DateTime.Now.AddMonths(-6),
                EndDate = DateTime.Now.AddMonths(6),
                Status = "Active"
            };

            // Pass the data to the view using ViewBag
            ViewBag.ProjectName = project.ProjectName;
            ViewBag.StartDate = project.StartDate.ToShortDateString();
            ViewBag.EndDate = project.EndDate.ToShortDateString();
            ViewBag.Status = project.Status;

            return View();
        }

        // POST: Admin/EditProject/1
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult EditProject(int id, FormCollection form)
        {
            // Extract form values (replace with actual logic)
            string projectName = form["ProjectName"];
            DateTime startDate = Convert.ToDateTime(form["StartDate"]);
            DateTime endDate = Convert.ToDateTime(form["EndDate"]);
            string status = form["Status"];

            // Update project in the database (replace with actual data update logic)

            return RedirectToAction("ProjectDetails");
        }

        // POST: Admin/DeleteProject/1
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteProject(int id)
        {
            // Simulate delete logic here

            return RedirectToAction("ProjectDetails");
        }
    }
}



@{
    ViewData["Title"] = "Project Details";
}

<div class="content">
    <h3 class="page-header">Project Details</h3>
    <a href="/Admin/CreateNewProject" class="btn btn-success mb-3">Create New</a>

    <table class="table table-bordered table-hover mt-3">
        <thead class="thead-dark">
            <tr>
                <th>ProjectID</th>
                <th>ProjectName</th>
                <th>StartDate</th>
                <th>EndDate</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in (IEnumerable<dynamic>)ViewData.Model)
            {
                <tr>
                    <td>@project.ProjectID</td>
                    <td>@project.ProjectName</td>
                    <td>@project.StartDate.ToShortDateString()</td>
                    <td>@project.EndDate.ToShortDateString()</td>
                    <td>@project.Status</td>
                    <td>
                        <a href="/Admin/EditProject/@project.ProjectID" class="btn btn-warning btn-sm">Edit</a>
                        <form action="/Admin/DeleteProject/@project.ProjectID" method="post" style="display:inline;">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this project?');">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
        margin: 0;
        padding: 0;
    }

    .content {
        margin: 20px;
    }

    .page-header {
        border-bottom: 2px solid #343a40;
        padding-bottom: 10px;
        margin-bottom: 20px;
        color: #343a40;
    }

    .table {
        width: 100%;
        margin-bottom: 1rem;
        color: #343a40;
        background-color: #ffffff;
        border-collapse: collapse;
    }

    .table th,
    .table td {
        padding: 0.75rem;
        vertical-align: middle;
        border: 1px solid #dee2e6;
    }

    .thead-dark th {
        background-color: #343a40;
        color: #ffffff;
        border-color: #454d55;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        background-color: #007bff;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
    }

    .btn-warning {
        background-color: #f39c12;
        border: none;
    }

    .btn-warning:hover {
        background-color: #e67e22;
    }

    .btn-danger {
        background-color: #e74c3c;
        border: none;
    }

    .btn-danger:hover {
        background-color: #c0392b;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .mt-3 {
        margin-top: 1rem;
    }
</style>



@{
    ViewData["Title"] = "Create New Project";
}

<h2>Create New Project</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="ProjectName">Project Name</label>
        <input type="text" class="form-control" id="ProjectName" name="ProjectName" required />
    </div>

    <div class="form-group">
        <label for="StartDate">Start Date</label>
        <input type="date" class="form-control" id="StartDate" name="StartDate" required />
    </div>

    <div class="form-group">
        <label for="EndDate">End Date</label>
        <input type="date" class="form-control" id="EndDate" name="EndDate" required />
    </div>

    <div class="form-group">
        <label for="Status">Status</label>
        <input type="text" class="form-control" id="Status" name="Status" required />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a href="@Url.Action("ProjectDetails", "Admin")" class="btn btn-secondary">Cancel</a>
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
        margin: 0;
        padding: 0;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(1.5em + .75rem + 2px);
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #ffffff;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        background-color: #007bff;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }
</style>



@{
    ViewData["Title"] = "Edit Project";
}

<h2>Edit Project</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="ProjectName">Project Name</label>
        <input type="text" class="form-control" id="ProjectName" name="ProjectName" value="@ViewBag.ProjectName" required />
    </div>

    <div class="form-group">
        <label for="StartDate">Start Date</label>
        <input type="date" class="form-control" id="StartDate" name="StartDate" value="@ViewBag.StartDate" required />
    </div>

    <div class="form-group">
        <label for="EndDate">End Date</label>
        <input type="date" class="form-control" id="EndDate" name="EndDate" value="@ViewBag.EndDate" required />
    </div>

    <div class="form-group">
        <label for="Status">Status</label>
        <input type="text" class="form-control" id="Status" name="Status" value="@ViewBag.Status" required />
    </div>

    <button type="submit" class="btn btn-primary">Update</button>
    <a href="@Url.Action("ProjectDetails", "Admin")" class="btn btn-secondary">Cancel</a>
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
        margin: 0;
        padding: 0;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(1.5em + .75rem + 2px);
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #ffffff;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        background-color: #007bff;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }
</style>



public class RouteConfig
{
    public static void RegisterRoutes(RouteCollection routes)
    {
        routes.IgnoreRoute("{resource}.axd/{*pathInfo}");

        routes.MapRoute(
            name: "Default",
            url: "{controller}/{action}/{id}",
            defaults: new { controller = "Admin", action = "AdminLogin", id = UrlParameter.Optional }
        );
    }
}



