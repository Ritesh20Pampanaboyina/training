// GET: Admin/CreateNewEmployee
public ActionResult CreateNewEmployee()
{
    return View();
}

// POST: Admin/CreateNewEmployee
[HttpPost]
[ValidateAntiForgeryToken]
public ActionResult CreateNewEmployee(FormCollection form)
{
    // Extract form values
    string employeeName = form["EmployeeName"];
    string email = form["Email"];
    string phone = form["Phone"];
    DateTime hireDate = Convert.ToDateTime(form["HireDate"]);
    int roleID = Convert.ToInt32(form["RoleID"]);
    int managerID = Convert.ToInt32(form["ManagerID"]);
    int projectID = Convert.ToInt32(form["ProjectID"]);
    int leaveBalance = Convert.ToInt32(form["LeaveBalance"]);
    int no_of_leave = Convert.ToInt32(form["No_of_leave"]);
    string emp_status = form["Emp_status"];

    // Add the new employee to the database (replace with actual data insertion logic)
    // Example:
    // db.AddEmployee(employeeName, email, phone, hireDate, roleID, managerID, projectID, leaveBalance, no_of_leave, emp_status);

    // After adding the new employee, redirect to EmployeeDetails
    return RedirectToAction("EmployeeDetails");
}


@{
    ViewData["Title"] = "Create New Employee";
}

<h2>Create New Employee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="EmployeeName">Employee Name</label>
        <input type="text" class="form-control" id="EmployeeName" name="EmployeeName" required />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <input type="email" class="form-control" id="Email" name="Email" required />
    </div>

    <div class="form-group">
        <label for="Phone">Phone</label>
        <input type="text" class="form-control" id="Phone" name="Phone" required />
    </div>

    <div class="form-group">
        <label for="HireDate">Hire Date</label>
        <input type="date" class="form-control" id="HireDate" name="HireDate" required />
    </div>

    <div class="form-group">
        <label for="RoleID">Role ID</label>
        <input type="text" class="form-control" id="RoleID" name="RoleID" required />
    </div>

    <div class="form-group">
        <label for="ManagerID">Manager ID</label>
        <input type="text" class="form-control" id="ManagerID" name="ManagerID" required />
    </div>

    <div class="form-group">
        <label for="ProjectID">Project ID</label>
        <input type="text" class="form-control" id="ProjectID" name="ProjectID" required />
    </div>

    <div class="form-group">
        <label for="LeaveBalance">Leave Balance</label>
        <input type="text" class="form-control" id="LeaveBalance" name="LeaveBalance" required />
    </div>

    <div class="form-group">
        <label for="No_of_leave">Number of Leaves Taken</label>
        <input type="text" class="form-control" id="No_of_leave" name="No_of_leave" required />
    </div>

    <div class="form-group">
        <label for="Emp_status">Employee Status</label>
        <input type="text" class="form-control" id="Emp_status" name="Emp_status" required />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a href="@Url.Action("EmployeeDetails", "Admin")" class="btn btn-secondary">Cancel</a>
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f8f9fa;
        color: #343a40;
        margin: 0;
        padding: 0;
    }
    .form-group {
        margin-bottom: 1rem;
    }
    .form-group label {
        font-weight: bold;
    }
    .form-control {
        width: 100%;
        padding: 0.375rem 0.75rem;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
    }
    .btn {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        background-color: #007bff;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
    }
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }
    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }
    .btn-secondary:hover {
        background-color: #5a6268;
    }
</style>


// GET: Admin/EmployeeDetails
public ActionResult EmployeeDetails()
{
    // Retrieve the list of employees from the database
    // Example (replace with actual data retrieval logic):
    var employees = new List<object>
    {
        new { EmployeeID = 1, EmployeeName = "John Doe", Email = "johndoe@example.com", Phone = "123-456-7890", HireDate = DateTime.Now.AddYears(-5), RoleID = 1, ManagerID = 2, ProjectID = 1, LeaveBalance = 10, No_of_leave = 5, Emp_status = "Active" }
        // Add more employees as necessary
    };

    return View(employees);
}



<form action="/Admin/DeleteEmployee/1" method="post" style="display:inline;">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this employee?');">Delete</button>
</form>


