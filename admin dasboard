using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using YourNamespace.Models;

public class AdminController : Controller
{
    private static List<EmployeeViewModel> employees = new List<EmployeeViewModel>
    {
        new EmployeeViewModel { EmployeeID = 1, EmployeeName = "John Doe", Email = "john@example.com", Phone = "123-456-7890", HireDate = DateTime.Now, RoleID = 1, ManagerID = 1, ProjectID = 1, LeaveBalance = 10, No_of_leave = 2, Emp_status = "Active" },
        new EmployeeViewModel { EmployeeID = 2, EmployeeName = "Jane Smith", Email = "jane@example.com", Phone = "987-654-3210", HireDate = DateTime.Now, RoleID = 2, ManagerID = 2, ProjectID = 2, LeaveBalance = 15, No_of_leave = 3, Emp_status = "Active" }
    };

    // GET: EmployeeDetails
    public ActionResult EmployeeDetails()
    {
        return View(employees);
    }

    // GET: CreateNewEmployee
    public ActionResult CreateNewEmployee()
    {
        return View(new EmployeeViewModel());
    }

    // POST: CreateNewEmployee
    [HttpPost]
    public ActionResult CreateNewEmployee(EmployeeViewModel model)
    {
        if (ModelState.IsValid)
        {
            // Add the new employee to the static list
            model.EmployeeID = employees.Max(e => e.EmployeeID) + 1;
            employees.Add(model);
            return RedirectToAction("EmployeeDetails");
        }

        return View(model);
    }

    // GET: EditEmployee
    public ActionResult EditEmployee(int id)
    {
        var employee = employees.FirstOrDefault(e => e.EmployeeID == id);
        if (employee == null)
        {
            return HttpNotFound();
        }
        return View(employee);
    }

    // POST: EditEmployee
    [HttpPost]
    public ActionResult EditEmployee(EmployeeViewModel model)
    {
        var employee = employees.FirstOrDefault(e => e.EmployeeID == model.EmployeeID);
        if (employee == null)
        {
            return HttpNotFound();
        }

        if (ModelState.IsValid)
        {
            // Update the employee details
            employee.EmployeeName = model.EmployeeName;
            employee.Email = model.Email;
            employee.Phone = model.Phone;
            employee.HireDate = model.HireDate;
            employee.RoleID = model.RoleID;
            employee.ManagerID = model.ManagerID;
            employee.ProjectID = model.ProjectID;
            employee.LeaveBalance = model.LeaveBalance;
            employee.No_of_leave = model.No_of_leave;
            employee.Emp_status = model.Emp_status;

            return RedirectToAction("EmployeeDetails");
        }

        return View(model);
    }

    // POST: DeleteEmployee
    [HttpPost]
    public ActionResult DeleteEmployee(int id)
    {
        var employee = employees.FirstOrDefault(e => e.EmployeeID == id);
        if (employee != null)
        {
            employees.Remove(employee);
        }

        return RedirectToAction("EmployeeDetails");
    }
}



@model ALMSystem2.Models.Employee

@{
    ViewData["Title"] = "Edit Employee";
}

<div class="content">
    <h3>Edit Employee</h3>
    <form asp-action="EditEmployee" method="post">
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label asp-for="EmployeeID"></label>
            <input asp-for="EmployeeID" class="form-control" readonly />
            <span asp-validation-for="EmployeeID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EmployeeName"></label>
            <input asp-for="EmployeeName" class="form-control" />
            <span asp-validation-for="EmployeeName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Email"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Phone"></label>
            <input asp-for="Phone" class="form-control" />
            <span asp-validation-for="Phone" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="HireDate"></label>
            <input asp-for="HireDate" class="form-control" type="date" />
            <span asp-validation-for="HireDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="RoleID"></label>
            <input asp-for="RoleID" class="form-control" />
            <span asp-validation-for="RoleID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ManagerID"></label>
            <input asp-for="ManagerID" class="form-control" />
            <span asp-validation-for="ManagerID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ProjectID"></label>
            <input asp-for="ProjectID" class="form-control" />
            <span asp-validation-for="ProjectID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LeaveBalance"></label>
            <input asp-for="LeaveBalance" class="form-control" />
            <span asp-validation-for="LeaveBalance" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="No_of_leave"></label>
            <input asp-for="No_of_leave" class="form-control" />
            <span asp-validation-for="No_of_leave" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Emp_status"></label>
            <input asp-for="Emp_status" class="form-control" />
            <span asp-validation-for="Emp_status" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>
</div>
