using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CC1.Models;

namespace CC1.Controllers
{
    [RoutePrefix("api/Country")]
    public class CountryController : ApiController
    {
        private static List<Country> countries = new List<Country>
        {
            new Country { ID = 33, CountryName = "INDIA", Capital = "NEW DELHI" },
            new Country { ID = 77, CountryName = "CHINA", Capital = "BEIJING" },
        };

        // GET: api/Country/All
        [HttpGet]
        [Route("All")]
        public IEnumerable<Country> GetAllCountries()
        {
            return countries;
        }

        // GET: api/Country/Bymsg
        [HttpGet]
        [Route("Bymsg")]
        public HttpResponseMessage GetCountriesWithMessage()
        {
            HttpResponseMessage response = Request.CreateResponse(HttpStatusCode.OK, countries);
            // response.Content = new StringContent("Received Thanks"); // Example response message
            return response;
        }

        // GET: api/Country/ById?pId=33
        [HttpGet]
        [Route("ById")]
        public IHttpActionResult GetCountryById(int pId)
        {
            Country country = countries.SingleOrDefault(c => c.ID == pId);
            if (country == null)
            {
                return NotFound();
            }
            return Ok(country.CountryName);
        }

        // POST: api/Country/AllPost
        [HttpPost]
        [Route("AllPost")]
        public List<Country> PostCountry([FromBody] Country country)
        {
            countries.Add(country);
            return countries;
        }

        // POST: api/Country/countrypost?Id=99&name=Canada&capital=Ottawa
        [HttpPost]
        [Route("countrypost")]
        public IEnumerable<Country> PostCountryByParams([FromUri] int Id, string name, string capital)
        {
            Country country = new Country
            {
                ID = Id,
                CountryName = name,
                Capital = capital
            };
            countries.Add(country);
            return countries;
        }

        // PUT: api/Country?pid=33
        [HttpPut]
        public IEnumerable<Country> PutCountry(int pid, [FromUri] Country updatedCountry)
        {
            Country existingCountry = countries.SingleOrDefault(c => c.ID == pid);
            if (existingCountry != null)
            {
                existingCountry.CountryName = updatedCountry.CountryName;
                existingCountry.Capital = updatedCountry.Capital;
            }
            return countries;
        }

        // DELETE: api/Country/delcountry?pid=33
        [HttpDelete]
        [Route("delcountry")]
        public IEnumerable<Country> DeleteCountry(int pid)
        {
            Country countryToRemove = countries.SingleOrDefault(c => c.ID == pid);
            if (countryToRemove != null)
            {
                countries.Remove(countryToRemove);
            }
            return countries;
        }
    }
}
