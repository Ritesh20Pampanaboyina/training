using Moq;
using System.Web;
using System.Web.Mvc;
using Xunit;
using ALMSystem2.Controllers;

namespace ALMSystem2.Tests.Controllers
{
    public class AdminControllerTests
    {
        private readonly AdminController _controller;
        private readonly Mock<HttpSessionStateBase> _session;

        public AdminControllerTests()
        {
            _session = new Mock<HttpSessionStateBase>();

            _controller = new AdminController
            {
                ControllerContext = new ControllerContext
                {
                    HttpContext = new Mock<HttpContextBase>().Object
                }
            };

            _controller.HttpContext.Session = _session.Object;
        }

        [Fact]
        public void AdminLogin_Get_WhenUserIsAuthenticated_RedirectsToAdminDashboard()
        {
            // Arrange
            _session.Setup(s => s["User"]).Returns("admin");

            // Act
            var result = _controller.AdminLogin() as RedirectToRouteResult;

            // Assert
            Assert.NotNull(result);
            Assert.Equal("AdminDashboard", result.RouteValues["action"]);
        }

        [Fact]
        public void AdminLogin_Get_WhenUserIsNotAuthenticated_ReturnsView()
        {
            // Arrange
            _session.Setup(s => s["User"]).Returns(null);

            // Act
            var result = _controller.AdminLogin() as ViewResult;

            // Assert
            Assert.NotNull(result);
        }

        [Fact]
        public void AdminLogin_Post_InvalidCredentials_ReturnsViewWithError()
        {
            // Act
            var result = _controller.AdminLogin("invalid", "credentials") as ViewResult;

            // Assert
            Assert.NotNull(result);
            Assert.False(_controller.ModelState.IsValid);
            Assert.True(_controller.ModelState.Values.Any(v => v.Errors.Count > 0));
        }

        [Fact]
        public void AdminLogin_Post_ValidCredentials_RedirectsToAdminDashboard()
        {
            // Act
            var result = _controller.AdminLogin("admin", "password") as RedirectToRouteResult;

            // Assert
            Assert.NotNull(result);
            Assert.Equal("AdminDashboard", result.RouteValues["action"]);
        }
    }
}
